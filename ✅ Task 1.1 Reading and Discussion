#include <iostream>
#include <vector>

int main() {
    std::vector<int> v1 = {1, 2, 3, 4};
    std::vector<int> v2 = v1;        // Copy
    std::vector<int> v3 = std::move(v1); // Move

    std::cout << "v1 size: " << v1.size() << std::endl;
    std::cout << "v2 size: " << v2.size() << std::endl;
    std::cout << "v3 size: " << v3.size() << std::endl;

    return 0;
}
Questions: 
* What is the output fo this program?
The outputs are:
v1 size= 0
v2 size= 4
v3 size= 4

*Why does v1.size() return 0 after the move?
Because std::move(v1) transfer the data of v1 to v3, and v1 is left with no data or in an empty state.

* What does std::move do?
Converts an object to an rvalue , allowing it to be used in a motion constructor instead of copying it.

*Why is v1 still in a valid but unspecified state?
Because the move operation ensures that the source object does not cause errors if it is destroyed, but its contents are no longer defined.

